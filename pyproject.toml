# pyproject.toml
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "portfolio-analytics-system"
version = "0.1.0"
description = "Event-driven system for portfolio analytics."
readme = "README.md"
requires-python = ">=3.11"

[project.optional-dependencies]
all = [
    "financial-calculator-engine @ file(src/libs/financial-calculator-engine)",
    "performance-calculator-engine @ file(src/libs/performance-calculator-engine)",
    "portfolio-common @ file(src/libs/portfolio-common)",
    "cashflow-calculator-service @ file(src/services/calculators/cashflow_calculator_service)",
    "cost-calculator-service @ file(src/services/calculators/cost_calculator_service)",
    "position-calculator-service @ file(src/services/calculators/position_calculator)",
    "position-valuation-calculator @ file(src/services/calculators/position_valuation_calculator)",
    "performance-calculator-service @ file(src/services/calculators/performance_calculator_service)",
    "ingestion_service @ file(src/services/ingestion_service)",
    "persistence_service @ file(src/services/persistence_service)",
    "query-service @ file(src/services/query-service)",
    "timeseries-generator-service @ file(src/services/timeseries_generator_service)",
]

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*", "deployment*"]

# --- UPDATED: Pytest Configuration ---
[tool.pytest.ini_options]
# The test root is now the single top-level tests directory
testpaths = [
    "tests"
]
# Add source roots to the Python path for test discovery
pythonpath = [
    "src",
    "src/libs/portfolio-common",
    "src/libs/financial-calculator-engine/src",
]
addopts = "--strict-markers"
minversion = "6.0"
# FIX: Explicitly set the default loop scope to silence the warning
asyncio_default_fixture_loop_scope = "function"
markers = [
    "asyncio: mark a test as being an asyncio test",
]
filterwarnings = [
    "ignore:Please use `import python_multipart` instead.:PendingDeprecationWarning"
]