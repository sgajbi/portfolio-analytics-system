version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.15
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: "ruok,stat,mntr,conf"
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok,stat,mntr,conf"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093" # Internal listener for services
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9093 --list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - app_network

  postgres:
    image: postgres:16-alpine
    hostname: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-portfolio_db}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  ingestion-service:
    build:
      context: .
      dockerfile: ./services/ingestion-service/Dockerfile
    hostname: ingestion-service
    container_name: ingestion-service
    ports:
      - "8000:8000"
    environment:
      # Removed PYTHONPATH here, setting it in Dockerfile
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_RAW_TRANSACTIONS_TOPIC: raw_transactions
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      # These volumes ensure live code updates and access to shared libs
      - ./services/ingestion-service/app:/app/app
      - ./libs/portfolio-common:/app/libs/portfolio-common
    command: >
      bash -c "pip install -e /app/libs/portfolio-common && 
        uvicorn app.main:app --host 0.0.0.0 --port 8000"
    networks:
      - app_network

  transaction-persistence-service:
    build:
      context: .
      dockerfile: ./services/transaction-persistence-service/Dockerfile
    hostname: transaction-persistence-service
    container_name: transaction-persistence-service
    environment:
      # Removed PYTHONPATH here, setting it in Dockerfile
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_RAW_TRANSACTIONS_TOPIC: raw_transactions
      KAFKA_RAW_TRANSACTIONS_COMPLETED_TOPIC: raw_transactions_completed
      DATABASE_URL: postgresql://user:password@postgres:5432/portfolio_db
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      # These volumes ensure live code updates and access to shared libs
      - ./services/transaction-persistence-service/app:/app/app
      - ./libs/portfolio-common:/app/libs/portfolio-common
      - ./alembic.ini:/app/alembic.ini
      - ./alembic:/app/alembic
    command: ["/app/startup.sh"] 
    networks:
      - app_network

  cost-calculator-service:
    build:
      context: .
      dockerfile: ./services/cost-calculator-service/Dockerfile
    hostname: cost-calculator-service
    container_name: cost-calculator-service
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_RAW_TRANSACTIONS_COMPLETED_TOPIC: raw_transactions_completed
      DATABASE_URL: postgresql://user:password@postgres:5432/portfolio_db
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      # These volumes ensure live code updates and access to shared libs
      - ./services/cost-calculator-service/app:/app/app
      - ./libs/portfolio-common:/app/libs/portfolio-common
      - ./libs/financial-calculator-engine:/app/libs/financial-calculator-engine
    command: > 
      bash -c "pip install -e /app/libs/portfolio-common && 
               python app/main.py"
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge