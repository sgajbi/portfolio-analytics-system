"""refactor: separate position history and daily snapshots

Revision ID: 19b67c2d3897
Revises: 61aba93ba496
Create Date: 2025-07-30 00:53:16.887229

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '19b67c2d3897'
down_revision: Union[str, None] = '61aba93ba496'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_position_snapshots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('portfolio_id', sa.String(), nullable=False),
    sa.Column('security_id', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=18, scale=10), nullable=False),
    sa.Column('cost_basis', sa.Numeric(precision=18, scale=10), nullable=False),
    sa.Column('market_price', sa.Numeric(precision=18, scale=10), nullable=True),
    sa.Column('market_value', sa.Numeric(precision=18, scale=10), nullable=True),
    sa.Column('unrealized_gain_loss', sa.Numeric(precision=18, scale=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.portfolio_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('portfolio_id', 'security_id', 'date', name='_portfolio_security_date_uc')
    )
    op.create_index(op.f('ix_daily_position_snapshots_date'), 'daily_position_snapshots', ['date'], unique=False)
    op.create_index(op.f('ix_daily_position_snapshots_portfolio_id'), 'daily_position_snapshots', ['portfolio_id'], unique=False)
    op.create_index(op.f('ix_daily_position_snapshots_security_id'), 'daily_position_snapshots', ['security_id'], unique=False)
    op.alter_column('position_history', 'transaction_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # CORRECTED: Provide an explicit name for the constraint
    op.create_unique_constraint('uq_position_history_transaction_id', 'position_history', ['transaction_id'])
    op.drop_column('position_history', 'market_value')
    op.drop_column('position_history', 'market_price')
    op.drop_column('position_history', 'unrealized_gain_loss')
    op.drop_column('position_history', 'snapshot_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('position_history', sa.Column('snapshot_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('position_history', sa.Column('unrealized_gain_loss', sa.NUMERIC(precision=18, scale=10), autoincrement=False, nullable=True))
    op.add_column('position_history', sa.Column('market_price', sa.NUMERIC(precision=18, scale=10), autoincrement=False, nullable=True))
    op.add_column('position_history', sa.Column('market_value', sa.NUMERIC(precision=18, scale=10), autoincrement=False, nullable=True))
    # CORRECTED: Provide the explicit name to be dropped
    op.drop_constraint('uq_position_history_transaction_id', 'position_history', type_='unique')
    op.alter_column('position_history', 'transaction_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('ix_daily_position_snapshots_security_id'), table_name='daily_position_snapshots')
    op.drop_index(op.f('ix_daily_position_snapshots_portfolio_id'), table_name='daily_position_snapshots')
    op.drop_index(op.f('ix_daily_position_snapshots_date'), table_name='daily_position_snapshots')
    op.drop_table('daily_position_snapshots')
    # ### end Alembic commands ###