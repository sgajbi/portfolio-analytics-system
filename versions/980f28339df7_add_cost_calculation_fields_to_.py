"""Add cost calculation fields to transactions table

Revision ID: 980f28339df7
Revises: 
Create Date: 2025-07-20 22:09:25.733647

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '980f28339df7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('transaction_costs', sa.Column('fee_type', sa.String(), nullable=False))
    op.add_column('transaction_costs', sa.Column('amount', sa.Numeric(precision=18, scale=10), nullable=False))
    op.add_column('transaction_costs', sa.Column('currency', sa.String(), nullable=False))
    op.add_column('transaction_costs', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.alter_column('transaction_costs', 'id',
               existing_type=sa.UUID(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('transaction_costs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index(op.f('ix_transaction_costs_instrument_id'), table_name='transaction_costs')
    op.drop_index(op.f('ix_transaction_costs_portfolio_id'), table_name='transaction_costs')
    op.drop_index(op.f('ix_transaction_costs_transaction_date'), table_name='transaction_costs')
    op.drop_constraint(op.f('uq_transaction_cost_business_key'), 'transaction_costs', type_='unique')
    op.create_index(op.f('ix_transaction_costs_id'), 'transaction_costs', ['id'], unique=False)
    op.create_foreign_key(None, 'transaction_costs', 'transactions', ['transaction_id'], ['transaction_id'])
    op.drop_column('transaction_costs', 'cost_amount')
    op.drop_column('transaction_costs', 'transaction_date')
    op.drop_column('transaction_costs', 'portfolio_id')
    op.drop_column('transaction_costs', 'instrument_id')
    op.drop_column('transaction_costs', 'cost_currency')
    op.drop_column('transaction_costs', 'calculation_date')
    op.add_column('transactions', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('transactions', sa.Column('security_id', sa.String(), nullable=False))
    op.add_column('transactions', sa.Column('gross_transaction_amount', sa.Numeric(precision=18, scale=10), nullable=False))
    op.add_column('transactions', sa.Column('net_transaction_amount', sa.Numeric(precision=18, scale=10), nullable=True))
    op.add_column('transactions', sa.Column('fees', sa.JSON(), nullable=True))
    op.add_column('transactions', sa.Column('accrued_interest', sa.Numeric(precision=18, scale=10), nullable=True))
    op.add_column('transactions', sa.Column('average_price', sa.Numeric(precision=18, scale=10), nullable=True))
    op.add_column('transactions', sa.Column('trade_currency', sa.String(), nullable=False))
    op.add_column('transactions', sa.Column('net_cost', sa.Numeric(precision=18, scale=10), nullable=True))
    op.add_column('transactions', sa.Column('gross_cost', sa.Numeric(precision=18, scale=10), nullable=True))
    op.add_column('transactions', sa.Column('realized_gain_loss', sa.Numeric(precision=18, scale=10), nullable=True))
    op.add_column('transactions', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.alter_column('transactions', 'transaction_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.alter_column('transactions', 'settlement_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('transactions', 'quantity',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=18, scale=10),
               existing_nullable=False)
    op.alter_column('transactions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_unique_constraint('_portfolio_transaction_uc', 'transactions', ['portfolio_id', 'transaction_id'])
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_index(op.f('ix_transactions_instrument_id'), 'transactions', ['instrument_id'], unique=False)
    op.create_index(op.f('ix_transactions_portfolio_id'), 'transactions', ['portfolio_id'], unique=False)
    op.create_index(op.f('ix_transactions_security_id'), 'transactions', ['security_id'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_id'), 'transactions', ['transaction_id'], unique=False)
    op.drop_column('transactions', 'price')
    op.drop_column('transactions', 'currency')
    op.drop_column('transactions', 'trade_fee')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('transactions', sa.Column('trade_fee', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('transactions', sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('transactions', sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_transactions_transaction_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_security_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_portfolio_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_instrument_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_constraint('_portfolio_transaction_uc', 'transactions', type_='unique')
    op.alter_column('transactions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('transactions', 'quantity',
               existing_type=sa.Numeric(precision=18, scale=10),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.alter_column('transactions', 'settlement_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=True)
    op.alter_column('transactions', 'transaction_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)
    op.drop_column('transactions', 'updated_at')
    op.drop_column('transactions', 'realized_gain_loss')
    op.drop_column('transactions', 'gross_cost')
    op.drop_column('transactions', 'net_cost')
    op.drop_column('transactions', 'trade_currency')
    op.drop_column('transactions', 'average_price')
    op.drop_column('transactions', 'accrued_interest')
    op.drop_column('transactions', 'fees')
    op.drop_column('transactions', 'net_transaction_amount')
    op.drop_column('transactions', 'gross_transaction_amount')
    op.drop_column('transactions', 'security_id')
    op.drop_column('transactions', 'id')
    op.add_column('transaction_costs', sa.Column('calculation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('transaction_costs', sa.Column('cost_currency', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('transaction_costs', sa.Column('instrument_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('transaction_costs', sa.Column('portfolio_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('transaction_costs', sa.Column('transaction_date', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('transaction_costs', sa.Column('cost_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'transaction_costs', type_='foreignkey')
    op.drop_index(op.f('ix_transaction_costs_id'), table_name='transaction_costs')
    op.create_unique_constraint(op.f('uq_transaction_cost_business_key'), 'transaction_costs', ['transaction_id', 'portfolio_id', 'instrument_id', 'transaction_date'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('ix_transaction_costs_transaction_date'), 'transaction_costs', ['transaction_date'], unique=False)
    op.create_index(op.f('ix_transaction_costs_portfolio_id'), 'transaction_costs', ['portfolio_id'], unique=False)
    op.create_index(op.f('ix_transaction_costs_instrument_id'), 'transaction_costs', ['instrument_id'], unique=False)
    op.alter_column('transaction_costs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('transaction_costs', 'id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('transaction_costs', 'updated_at')
    op.drop_column('transaction_costs', 'currency')
    op.drop_column('transaction_costs', 'amount')
    op.drop_column('transaction_costs', 'fee_type')
    # ### end Alembic commands ###
